service: aws-python-project

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9

#raw-soybean-gp4-sptech
#stagged-soybean-gp4-sptech

resources:
  Resources:
    #rds
    MyDBInstance:
      Type: "AWS::RDS::DBInstance"
      Properties:
        AllocatedStorage: 20
        DBInstanceClass: db.t3.medium
        Engine: mysql
        MasterUsername: soybean
        MasterUserPassword: urubu100
        Tags:
          - Key: Name
            Value: rds-soybean-gp4-sptech
    #labda
    LambdaRaw:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: lambda-raw-to-staged
        Code:
          ImageUri: 181076026206.dkr.ecr.us-east-1.amazonaws.com/soybean-raw:latest
        PackageType: Image
        Role: arn:aws:iam::181076026206:role/LabRole
        Timeout: 300
        Tags:
          - Key: Name
            Value: lambda-raw-to-staged

    LambdaStaged:
      Type: AWS::Lambda::Function
      Properties:
        FunctionName: lambda-staged-to-consumed
        Code:
          ImageUri: 181076026206.dkr.ecr.us-east-1.amazonaws.com/soybean-staged:latest
        PackageType: Image
        Role: arn:aws:iam::181076026206:role/LabRole
        Timeout: 300
        Tags:
          - Key: Name
            Value: lambda-staged-to-consumed

    LambdaECRaw:
      Type: AWS::ECR::Repository
      Properties:
        ImageScanningConfiguration:
          ScanOnPush: true
        RepositoryName: soybean-raw
        RepositoryPolicyText:
          Version: "2012-10-17"
          Statement:
            - Sid: ECRLambdaPolicy
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - "ecr:BatchGetImage"
                - "ecr:GetDownloadUrlForLayer"
        Tags:
          - Key: Name
            Value: lambda-raw-to-staged

    LambdaECStaged:
      Type: AWS::ECR::Repository
      Properties:
        ImageScanningConfiguration:
          ScanOnPush: true
        RepositoryName: soybean-staged
        RepositoryPolicyText:
          Version: "2012-10-17"
          Statement:
            - Sid: ECRLambdaPolicy
              Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - "ecr:BatchGetImage"
                - "ecr:GetDownloadUrlForLayer"
        Tags:
          - Key: Name
            Value: lambda-staged-to-consumed

    s3BucketStaged:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: stagged-soybean-gp4-sptech
        Tags:
          - Key: Name
            Value: stagged-soybean-gp4-sptech

    s3BucketConsumed:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: consumed-soybean-gp4-sptech
        Tags:
          - Key: Name
            Value: consumed-soybean-gp4-sptech

    #REDE

    myVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/24
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: vpc-soybean-gp4-sptech

    igwName:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: igw-soyben-gp4-sptech
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref myVPC
        InternetGatewayId: !Ref igwName

    mySubnet:
      Type: AWS::EC2::Subnet
      Properties:
        MapPublicIpOnLaunch: true
        AvailabilityZone: us-east-1a
        VpcId: !Ref myVPC
        CidrBlock: 10.0.0.0/24
        Tags:
          - Key: Name
            Value: subnet-public-soyben-gp4-sptech

    myRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref myVPC
        Tags:
          - Key: Name
            Value: rt-public-soyben-gp4-sptech

    routeTableAssocName:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref mySubnet
        RouteTableId: !Ref myRouteTable

    #SEGURANÃ‡A
    secGroupName:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: sg_public_soyben_gp4_sptech
        GroupDescription: sg_public_soyben_gp4_sptech
        VpcId: !Ref myVPC
        SecurityGroupIngress:
          - IpProtocol: "-1"
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: "-1"
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: sg_public_soyben_gp4_sptech

    # INSTANCIA DESENVOLVIMENTO COM SPARK
    eipName:
      Type: AWS::EC2::EIP
      Properties:
        Domain: !Ref myVPC
        InstanceId: !Ref myEC2Instance

    myEipAssociation:
      Type: AWS::EC2::EIPAssociation
      Properties:
        EIP: !Ref eipName
        InstanceId: !Ref myEC2Instance

    myEC2Instance:
      Type: AWS::EC2::Instance
      Properties:
        IamInstanceProfile: LabInstanceProfile
        KeyName: key-par-public
        SubnetId: !Ref mySubnet
        ImageId: ami-0f34c5ae932e6f0e4
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref secGroupName
        Tags:
          - Key: Name
            Value: instance-soybean-dev-gp4-sptech

    #ALERTA (SNS)
    MySNSTopic:
      Type: "AWS::SNS::Topic"
      Properties:
        KmsMasterKeyId: 6e41aefa-4e37-45d7-bb94-625bfbf8b1b8
        Tags:
          - Key: Name
            Value: sns-topic-alert-email
        DisplayName: sns-topic-alert-email

    MySNSSubscriptionEdu:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: eduardo.oliveira@sptech.school

    MySNSSubscriptionRenan:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: renan.lima@sptech.school
    MySNSSubscriptionJeremy:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: jeremy.freitas@sptech.school
    MySNSSubscriptionGabriel:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: gabriel.pedrosa@sptech.school
    MySNSSubscriptionEnan:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: enan.oliveira@sptech.school
    MySNSSubscriptionGarcez:
      Type: "AWS::SNS::Subscription"
      Properties:
        Protocol: email
        TopicArn:
          Ref: MySNSTopic
        Endpoint: rodrigo.hermann@sptech.school
#ecr
