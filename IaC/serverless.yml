service: aws-python-project

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9

functions:
  rawToStagedLambda:
    handler: raw_to_staged/app.lambda_handler
    timeout: 30
    name: raw_to_staged_lambda
    role: arn:aws:iam::181076026206:role/LabRole
    events:
      - s3:
          bucket: raw-soybean-gp4-sptech
          event: s3:ObjectCreated:*

  stagedToConsumedLambda:
    handler: staged_to_consumed/app.lambda_handler
    timeout: 30
    name: staged_to_consumed_lambda
    role: arn:aws:iam::181076026206:role/LabRole
    events:
      - s3:
          bucket: stagged-soybean-gp4-sptech
          event: s3:ObjectCreated:*

resources:
  Resources:
    s3BucketConsumed:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: consumed-soybean-gp4-sptech
        Tags:
          - Key: Name
            Value: consumed-soybean-gp4-sptech

    #REDE

    myVPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/24
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: vpc-soybean-gp4-sptech

    igwName:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: igw-soyben-gp4-sptech
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref myVPC
        InternetGatewayId: !Ref igwName

    mySubnet:
      Type: AWS::EC2::Subnet
      Properties:
        MapPublicIpOnLaunch: true
        AvailabilityZone: us-east-1a
        VpcId: !Ref myVPC
        CidrBlock: 10.0.0.0/24
        Tags:
          - Key: Name
            Value: subnet-public-soyben-gp4-sptech

    myRouteTable:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref myVPC
        Tags:
          - Key: Name
            Value: rt-public-soyben-gp4-sptech

    routeTableAssocName:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref mySubnet
        RouteTableId: !Ref myRouteTable

    #SEGURANÃ‡A
    secGroupName:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: sg_public_soyben_gp4_sptech
        GroupDescription: sg_public_soyben_gp4_sptech
        VpcId: !Ref myVPC
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: sg_public_soyben_gp4_sptech

    # INSTANCIA DESENVOLVIMENTO COM SPARK

    myEC2Instance:
      Type: AWS::EC2::Instance
      Properties:
        IamInstanceProfile: LabInstanceProfile
        KeyName: key-par-public
        SubnetId: !Ref mySubnet
        ImageId: ami-0f34c5ae932e6f0e4
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref secGroupName
        UserData: !Base64 |
          !/bin/bash -ex
          sudo yum -y update
          sudo yum -y install python3
          sudo pip3 install jupyter
          sudo pip3 install pyspark

          jupyter notebook --generate-config
          echo "c.NotebookApp.password = 'sha1:2c998f379d18:be2e72d559114b6a74bc8d6f2d0176e152e688bf'" >> ~/.jupyter/jupyter_notebook_config.py

          python3 -m ipykernel install --user

          jupyter notebook --ip=0.0.0.0 --port=80 --no-browser
        Tags:
          - Key: Name
            Value: instance-soybean-dev-gp4-sptech
