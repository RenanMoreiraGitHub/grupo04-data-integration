#serverless deploy --aws-profile faculdade
#serverless remove --aws-profile faculdade
#jupyter-notebook --allow-root --ip 0.0.0.0 --no-browser

service: aws-python-project

frameworkVersion: "3"

provider:
  name: aws
  runtime: python3.9

resources:
  Resources:
    vpc:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.0.0.0/24
        EnableDnsSupport: true
        Tags:
          - Key: Name
            Value: vpc-sprint3
    igwName:
      Type: AWS::EC2::InternetGateway
      Properties:
        Tags:
          - Key: Name
            Value: ig-sprint3
    AttachGateway:
      Type: AWS::EC2::VPCGatewayAttachment
      Properties:
        VpcId: !Ref vpc
        InternetGatewayId: !Ref igwName
    routeTableName:
      Type: AWS::EC2::RouteTable
      Properties:
        VpcId: !Ref vpc
        Tags:
          - Key: Name
            Value: route-table-sprint3
    routeName:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref routeTableName
        DestinationCidrBlock: 0.0.0.0/0
        GatewayId: !Ref igwName
    subnetName:
      Type: AWS::EC2::Subnet
      Properties:
        MapPublicIpOnLaunch: true
        AvailabilityZone: "us-east-1a"
        VpcId: !Ref vpc
        CidrBlock: 10.0.0.1/25
        Tags:
          - Key: Name
            Value: subnet-public-sprint3
    routeTableAssocName:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        SubnetId: !Ref subnetName
        RouteTableId: !Ref routeTableName
    secGroupName:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupName: "sg_sprint3_public"
        GroupDescription: "sg_sprint3_public"
        VpcId: !Ref vpc
        SecurityGroupIngress:
          - IpProtocol: tcp
            FromPort: 22
            ToPort: 22
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 80
            ToPort: 80
            CidrIp: 0.0.0.0/0
          - IpProtocol: tcp
            FromPort: 8888
            ToPort: 8888
            CidrIp: 0.0.0.0/0
        SecurityGroupEgress:
          - IpProtocol: "-1"
            CidrIp: 0.0.0.0/0
        Tags:
          - Key: Name
            Value: "sg_sprint3_public"
    KeyPair:
      Type: AWS::EC2::KeyPair
      Properties:
        KeyName: instance-sprint3
    myEC2InstanceSprint3:
      Type: AWS::EC2::Instance
      Properties:
        KeyName: !Ref KeyPair
        ImageId: "ami-053b0d53c279acc90"
        InstanceType: t3.medium
        UserData: !Base64 |
          #!/bin/bash -ex
          sudo apt update && sudo apt upgrade -y
          sudo apt install openjdk-11-jdk -y
          sudo apt install python3-pip -y
          sudo pip3 install pyspark
          sudo pip install jupyterlab
          sudo pip install notebook
          #jupyter-notebook --allow-root --ip 0.0.0.0 --no-browser
        IamInstanceProfile: LabInstanceProfile
        SubnetId: !Ref subnetName
        Monitoring: false
        SecurityGroupIds:
          - !Ref secGroupName
        Tags:
          - Key: Name
            Value: instance-jupyter-raw-for-staged
            
    myEC2InstanceSprint3StagedForConsumed:
      Type: AWS::EC2::Instance
      Properties:
        KeyName: !Ref KeyPair
        ImageId: "ami-053b0d53c279acc90"
        InstanceType: t3.medium
        UserData: !Base64 |
          #!/bin/bash -ex
          sudo apt update && sudo apt upgrade -y
          sudo apt install openjdk-11-jdk -y
          sudo apt install python3-pip -y
          sudo pip3 install pyspark
          sudo pip install jupyterlab
          sudo pip install notebook
          #jupyter-notebook --allow-root --ip 0.0.0.0 --no-browser
        IamInstanceProfile: LabInstanceProfile
        SubnetId: !Ref subnetName
        Monitoring: false
        SecurityGroupIds:
          - !Ref secGroupName
        Tags:
          - Key: Name
            Value: instance-jupyter-staged-for-consumed

    s3BucketRaw:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: raw-sprint-3
        Tags:
          - Key: Name
            Value: raw-sprint-3
    s3BucketStagged:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: stagged-sprint-3
        Tags:
          - Key: Name
            Value: stagged-sprint-3
    s3BucketConsumed:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: consumed-sprint-3
        Tags:
          - Key: Name
            Value: consumed-sprint-3
